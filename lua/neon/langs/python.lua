local utils = require("neon.utils")
local c = require("neon.colors")

local M = {}

function M.setup()
	local highlights = {
		pythonBuiltin = { fg = c.variable },
		pythonBuiltinObj = { fg = c.variable },
		pythonBuiltinFunc = { fg = c.func },
		pythonFunction = { fg = c.func },
		pythonDecorator = { fg = c.keyword },
		pythonImport = { fg = c.keyword },
		pythonFrom = { fg = c.keyword },
		pythonAs = { fg = c.keyword },
		pythonNone = { fg = c.constant },
		pythonTrue = { fg = c.constant },
		pythonFalse = { fg = c.constant },
		pythonSelf = { fg = c.variable },
		pythonDef = { fg = c.keyword },
		pythonClass = { fg = c.keyword },
		pythonLambda = { fg = c.keyword },
		pythonReturn = { fg = c.keyword },
		pythonYield = { fg = c.keyword },
		pythonDel = { fg = c.keyword },
		pythonGlobal = { fg = c.keyword },
		pythonNonlocal = { fg = c.keyword },
		pythonAssert = { fg = c.keyword },
		pythonWith = { fg = c.keyword },
		pythonAsync = { fg = c.keyword },
		pythonAwait = { fg = c.keyword },
		pythonTry = { fg = c.keyword },
		pythonExcept = { fg = c.keyword },
		pythonFinally = { fg = c.keyword },
		pythonRaise = { fg = c.keyword },
		pythonIf = { fg = c.keyword },
		pythonElif = { fg = c.keyword },
		pythonElse = { fg = c.keyword },
		pythonFor = { fg = c.keyword },
		pythonWhile = { fg = c.keyword },
		pythonBreak = { fg = c.keyword },
		pythonContinue = { fg = c.keyword },
		pythonAnd = { fg = c.operator },
		pythonOr = { fg = c.operator },
		pythonNot = { fg = c.operator },
		pythonIn = { fg = c.operator },
		pythonIs = { fg = c.operator },
		pythonEq = { fg = c.operator },
		pythonNe = { fg = c.operator },
		pythonLt = { fg = c.operator },
		pythonLe = { fg = c.operator },
		pythonGt = { fg = c.operator },
		pythonGe = { fg = c.operator },
		pythonAdd = { fg = c.operator },
		pythonSub = { fg = c.operator },
		pythonMul = { fg = c.operator },
		pythonDiv = { fg = c.operator },
		pythonMod = { fg = c.operator },
		pythonPow = { fg = c.operator },
		pythonFloorDiv = { fg = c.operator },
		pythonAssign = { fg = c.operator },
		pythonAugAssign = { fg = c.operator },
		pythonDot = { fg = c.fg_sub },
		pythonColon = { fg = c.fg_sub },
		pythonComma = { fg = c.fg_sub },
		pythonSemicolon = { fg = c.fg_sub },
		pythonParen = { fg = c.fg_sub },
		pythonBrackets = { fg = c.fg_sub },
		pythonBraces = { fg = c.fg_sub },
	}

	utils.load_highlights(highlights)
end

return M
